import { Component } from '@angular/core';
import { FormGroup, FormControl, Validators , FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import Swal from 'sweetalert2'
import { OrderService } from '../Service/order.service';


@Component({
  selector: 'app-package-size',
  standalone: false,
  templateUrl: './package-size.component.html',
  styleUrls: ['./package-size.component.css']
})
export class PackageSizeComponent {
  selectedMenus: any[] = [];
  packageform: FormGroup;
  selectedDate: string | null = null;
  showCalendar = false;
  form: any;

  constructor(private router: Router, private OrderService: OrderService) {
    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å LocalStorage
    const storedData = localStorage.getItem('formData');
    const parsedData = storedData ? JSON.parse(storedData) : {};

    this.packageform = new FormGroup({
      contact_Name: new FormControl(parsedData.contact_Name || '', Validators.required),
      province: new FormControl(parsedData.province || '', Validators.required),
      place: new FormControl(parsedData.place || '', Validators.required),
      date: new FormControl(parsedData.date || '', Validators.required),
      phone: new FormControl(parsedData.phone || '', Validators.required),
      guestamount:new FormControl(parsedData.guestamount||'',Validators.required)
    });
  }

  ngOnInit() {
    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î selectedMenus ‡∏à‡∏≤‡∏Å localStorage
    const storedMenus = localStorage.getItem('selectedMenus');
    if (storedMenus) {
      this.selectedMenus = JSON.parse(storedMenus);
    }
    console.log("üìã ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage:", this.selectedMenus);
    
  }

  
 
  onSubmit() {
    if (this.packageform.invalid) {
      Swal.fire({
        title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö",
        icon: "warning",
      });
      return;
    }
  
    // ‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≠‡∏ô‡∏ó‡∏±‡∏ö)
    localStorage.removeItem('formData');
  
    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤
    const formData = this.packageform.value;
    localStorage.setItem('formData', JSON.stringify(formData));
  
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ LocalStorage ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    console.log("üìå Form Data ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á LocalStorage:", localStorage.getItem('formData'));
  
    Swal.fire({
      title: "success",
      icon: "success",
      text: "‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏°‡∏≤‡∏Å ‡πÑ‡∏õ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏±‡∏ô",
      draggable: true
    }).then(() => {
      
      this.OrderService.setUserInfo(formData);
      this.router.navigate(['/maindish']);
    });
  }

  toggleCalendar() {
    this.showCalendar = !this.showCalendar;
    console.log("üìÜ Toggle Calendar:", this.showCalendar);
  }

  // onDateSelected(date: string) {
  //   console.log("üìå ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:", date);
  //   this.selectedDate = date;
  //   this.packageform.patchValue({ date }); 
  //   this.closeCalendarModal(); 
  // }
   

  onDateSelected(date: string) {
    console.log("üìå ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Calendar):", date);
    // ‡πÉ‡∏ä‡πâ new Date() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const selectedDateObj = new Date(date + 'T00:00:00'); // ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô TimeZone Error
    const localDate = new Date(selectedDateObj.getTime() - selectedDateObj.getTimezoneOffset() * 60000);
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô "YYYY-MM-DD" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö input text
    const formattedDate = localDate.toISOString().split('T')[0];
    console.log("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß):", formattedDate);
    this.selectedDate = formattedDate; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà input
    this.packageform.patchValue({ date: formattedDate }); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
    this.closeCalendarModal();
  }

  
  
  openCalendarModal() {
    this.showCalendar = true;
  }
  
  closeCalendarModal() {
    this.showCalendar = false;
  }



  
}
